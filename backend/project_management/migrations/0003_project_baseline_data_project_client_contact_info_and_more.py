# Generated by Django 5.2.4 on 2025-08-04 06:04

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0018_enhance_brand_profile_comprehensive_branding'),
        ('project_management', '0002_alter_projecttask_options_project_actual_cost_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='project',
            name='baseline_data',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='project',
            name='client_contact_info',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='project',
            name='custom_fields',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='project',
            name='integration_settings',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='project',
            name='notification_settings',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='project',
            name='project_code',
            field=models.CharField(blank=True, max_length=20, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='project',
            name='resource_utilization',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='project',
            name='variance_analysis',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='projectcomment',
            name='mentions',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='projectfile',
            name='folder',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='projectfile',
            name='promana_auto_categorized',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='projectfile',
            name='tags',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='projectfile',
            name='version',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='projectmilestone',
            name='client_approval_required',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='projectmilestone',
            name='client_approved',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='projectmilestone',
            name='client_approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='custom_fields',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='promana_acceleration_opportunity',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='promana_risk_indicator',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='swimlane',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='projectteammember',
            name='capacity_hours',
            field=models.DecimalField(decimal_places=2, default=40.0, help_text='Weekly capacity in hours', max_digits=6),
        ),
        migrations.AddField(
            model_name='projectteammember',
            name='permissions',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='projectteammember',
            name='skills',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='projectteammember',
            name='role',
            field=models.CharField(choices=[('project_manager', 'Project Manager'), ('team_lead', 'Team Lead'), ('developer', 'Developer'), ('designer', 'Designer'), ('content_creator', 'Content Creator'), ('marketing_specialist', 'Marketing Specialist'), ('qa_tester', 'QA Tester'), ('stakeholder', 'Stakeholder'), ('contributor', 'Contributor'), ('client', 'Client')], default='contributor', max_length=50),
        ),
        migrations.CreateModel(
            name='ProjectReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('report_type', models.CharField(choices=[('progress', 'Progress Report'), ('budget', 'Budget Report'), ('time_tracking', 'Time Tracking Report'), ('team_performance', 'Team Performance Report'), ('variance_analysis', 'Variance Analysis Report'), ('risk_hotspot', 'Risk Hotspot Report'), ('resource_utilization', 'Resource Utilization Report'), ('custom', 'Custom Report')], max_length=50)),
                ('report_data', models.JSONField(default=dict)),
                ('parameters', models.JSONField(default=dict, help_text='Report parameters and filters')),
                ('is_scheduled', models.BooleanField(default=False)),
                ('schedule_frequency', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='project_management.project')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_reports', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Project Report',
                'verbose_name_plural': 'Project Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectRisk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('probability', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('impact', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('mitigated', 'Mitigated'), ('closed', 'Closed'), ('monitoring', 'Under Monitoring')], default='active', max_length=20)),
                ('mitigation_strategy', models.TextField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('promana_identified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_risks', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risks', to='project_management.project')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_risks', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Project Risk',
                'verbose_name_plural': 'Project Risks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TimeEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('hours', models.DecimalField(decimal_places=2, max_digits=6)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_billable', models.BooleanField(default=True)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='project_management.project')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entry_records', to='project_management.projecttask')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='core.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Time Entry',
                'verbose_name_plural': 'Time Entries',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientPortal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_name', models.CharField(max_length=255)),
                ('client_email', models.EmailField(max_length=254)),
                ('access_code', models.CharField(max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('permissions', models.JSONField(default=dict, help_text='What the client can see/do')),
                ('last_access', models.DateTimeField(blank=True, null=True)),
                ('notification_preferences', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_portal', to='project_management.project')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_portals', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Client Portal',
                'verbose_name_plural': 'Client Portals',
                'unique_together': {('project', 'client_email')},
            },
        ),
    ]
