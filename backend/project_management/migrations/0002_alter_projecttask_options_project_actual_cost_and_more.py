# Generated by Django 5.2.4 on 2025-08-03 05:04

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0018_enhance_brand_profile_comprehensive_branding'),
        ('project_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='projecttask',
            options={'ordering': ['start_date', 'priority', 'name'], 'verbose_name': 'Project Task', 'verbose_name_plural': 'Project Tasks'},
        ),
        migrations.AddField(
            model_name='project',
            name='actual_cost',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AddField(
            model_name='project',
            name='automation_rules_json',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='project',
            name='client_email',
            field=models.EmailField(blank=True, max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='client_name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='client_portal_access_code',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='client_portal_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='project',
            name='health_score',
            field=models.IntegerField(default=100, help_text="Promana's project health score (0-100)"),
        ),
        migrations.AddField(
            model_name='project',
            name='is_template',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='project',
            name='last_promana_analysis',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='predicted_completion_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='project_type',
            field=models.CharField(choices=[('website_redesign', 'Website Redesign'), ('marketing_campaign', 'Marketing Campaign Launch'), ('app_development', 'App Development'), ('social_media_strategy', 'Social Media Strategy'), ('seo_audit', 'SEO Audit'), ('brand_identity', 'Brand Identity'), ('content_creation', 'Content Creation'), ('email_campaign', 'Email Campaign'), ('event_planning', 'Event Planning'), ('product_launch', 'Product Launch'), ('custom', 'Custom')], default='custom', max_length=50),
        ),
        migrations.AddField(
            model_name='project',
            name='risk_level',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=20),
        ),
        migrations.AddField(
            model_name='project',
            name='template_name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='parent_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_tasks', to='project_management.projecttask'),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='promana_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='promana_risk_score',
            field=models.IntegerField(default=0, help_text="Promana's risk assessment score (0-100)"),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='promana_suggested_assignee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='promana_suggested_tasks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='tags',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='time_entries',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='project',
            name='budget',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='project',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('on_hold', 'On Hold'), ('completed', 'Completed'), ('archived', 'Archived'), ('at_risk', 'At Risk'), ('ahead_of_schedule', 'Ahead of Schedule'), ('cancelled', 'Cancelled')], default='draft', max_length=50),
        ),
        migrations.AlterField(
            model_name='projecttask',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('blocked', 'Blocked'), ('on_hold', 'On Hold'), ('review', 'In Review')], default='pending', max_length=50),
        ),
        migrations.CreateModel(
            name='ProjectAutomationRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('trigger', models.CharField(choices=[('task_completed', 'Task Completed'), ('task_overdue', 'Task Overdue'), ('milestone_reached', 'Milestone Reached'), ('status_changed', 'Status Changed'), ('budget_exceeded', 'Budget Exceeded'), ('health_score_low', 'Health Score Low')], max_length=50)),
                ('action', models.CharField(choices=[('assign_task', 'Assign Task'), ('send_notification', 'Send Notification'), ('update_status', 'Update Status'), ('create_task', 'Create Task'), ('send_alert', 'Send Alert')], max_length=50)),
                ('conditions', models.JSONField(default=dict, help_text='Trigger conditions')),
                ('action_data', models.JSONField(default=dict, help_text='Action parameters')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_automation_rules', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_automation_rules', to='project_management.project')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_automation_rules', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Project Automation Rule',
                'verbose_name_plural': 'Project Automation Rules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('is_internal', models.BooleanField(default=True, help_text='Not visible to client portal')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_comments', to=settings.AUTH_USER_MODEL)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='project_management.projectcomment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='project_management.project')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='project_management.projecttask')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_comments', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Project Comment',
                'verbose_name_plural': 'Project Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('file_type', models.CharField(choices=[('document', 'Document'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('archive', 'Archive'), ('other', 'Other')], default='document', max_length=20)),
                ('file_url', models.URLField()),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('is_public', models.BooleanField(default=False, help_text='Visible to client portal')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='project_management.project')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='project_management.projecttask')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_files', to='core.tenant')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project File',
                'verbose_name_plural': 'Project Files',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectMilestone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('due_date', models.DateField()),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_milestones', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='project_management.project')),
                ('related_tasks', models.ManyToManyField(blank=True, to='project_management.projecttask')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_milestones', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Project Milestone',
                'verbose_name_plural': 'Project Milestones',
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='ProjectTeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('project_manager', 'Project Manager'), ('team_lead', 'Team Lead'), ('developer', 'Developer'), ('designer', 'Designer'), ('content_creator', 'Content Creator'), ('marketing_specialist', 'Marketing Specialist'), ('qa_tester', 'QA Tester'), ('stakeholder', 'Stakeholder'), ('contributor', 'Contributor')], default='contributor', max_length=50)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Hourly rate for cost tracking', max_digits=8, null=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_memberships', to='project_management.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['role', 'user__first_name'],
                'unique_together': {('project', 'user')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='team_members',
            field=models.ManyToManyField(related_name='participating_projects', through='project_management.ProjectTeamMember', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PromanaInsight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('insight_type', models.CharField(choices=[('risk_alert', 'Risk Alert'), ('opportunity', 'Opportunity'), ('recommendation', 'Recommendation'), ('prediction', 'Prediction'), ('optimization', 'Optimization')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('confidence_score', models.IntegerField(help_text='Confidence score (0-100)')),
                ('is_actionable', models.BooleanField(default=True)),
                ('action_taken', models.BooleanField(default=False)),
                ('action_taken_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action_taken_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acted_insights', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promana_insights', to='project_management.project')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promana_insights', to='project_management.projecttask')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promana_insights', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Promana Insight',
                'verbose_name_plural': 'Promana Insights',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('project_type', models.CharField(choices=[('website_redesign', 'Website Redesign'), ('marketing_campaign', 'Marketing Campaign Launch'), ('app_development', 'App Development'), ('social_media_strategy', 'Social Media Strategy'), ('seo_audit', 'SEO Audit'), ('brand_identity', 'Brand Identity'), ('content_creation', 'Content Creation'), ('email_campaign', 'Email Campaign'), ('event_planning', 'Event Planning'), ('product_launch', 'Product Launch'), ('custom', 'Custom')], max_length=50)),
                ('template_data', models.JSONField(default=dict, help_text='Stores template structure, tasks, etc.')),
                ('is_global', models.BooleanField(default=False, help_text='Available to all tenants')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_project_templates', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_templates', to='core.tenant')),
            ],
            options={
                'verbose_name': 'Project Template',
                'verbose_name_plural': 'Project Templates',
                'ordering': ['name'],
                'unique_together': {('name', 'tenant')},
            },
        ),
    ]
