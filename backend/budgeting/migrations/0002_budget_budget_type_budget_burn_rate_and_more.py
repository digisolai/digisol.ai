# Generated by Django 5.2.4 on 2025-08-03 22:52

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('budgeting', '0001_initial'),
        ('core', '0018_enhance_brand_profile_comprehensive_branding'),
    ]

    operations = [
        migrations.AddField(
            model_name='budget',
            name='budget_type',
            field=models.CharField(choices=[('annual', 'Annual'), ('quarterly', 'Quarterly'), ('monthly', 'Monthly'), ('campaign', 'Campaign-Specific'), ('departmental', 'Departmental'), ('project', 'Project-Based'), ('custom', 'Custom Period')], default='custom', max_length=20),
        ),
        migrations.AddField(
            model_name='budget',
            name='burn_rate',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='budget',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='budget',
            name='linked_goals',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='budget',
            name='pecunia_health_score',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='budget',
            name='pecunia_recommendations',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='budget',
            name='pecunia_risk_level',
            field=models.CharField(blank=True, choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='budget',
            name='projected_spend',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='budget',
            name='projected_variance',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='budget',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('pending', 'Pending'), ('over_budget', 'Over Budget'), ('under_budget', 'Under Budget'), ('archived', 'Archived')], default='active', max_length=20),
        ),
        migrations.AddField(
            model_name='budget',
            name='tags',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='budget',
            name='target_cpa',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='budget',
            name='target_roi',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='budgetcategory',
            name='color',
            field=models.CharField(default='#3182CE', max_length=7),
        ),
        migrations.AddField(
            model_name='budgetcategory',
            name='icon',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='budgetcategory',
            name='is_default',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='expense',
            name='invoice_number',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='is_recurring',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='expense',
            name='payment_method',
            field=models.CharField(choices=[('credit_card', 'Credit Card'), ('bank_transfer', 'Bank Transfer'), ('cash', 'Cash'), ('check', 'Check'), ('paypal', 'PayPal'), ('other', 'Other')], default='other', max_length=20),
        ),
        migrations.AddField(
            model_name='expense',
            name='pecunia_auto_categorized',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='expense',
            name='pecunia_confidence_score',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='expense',
            name='receipt_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='recurring_frequency',
            field=models.CharField(blank=True, choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='paid', max_length=20),
        ),
        migrations.AddField(
            model_name='expense',
            name='vendor',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='budget',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=12),
        ),
        migrations.CreateModel(
            name='BudgetForecast',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('forecast_date', models.DateField()),
                ('projected_spend', models.DecimalField(decimal_places=2, max_digits=12)),
                ('confidence_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('scenario_name', models.CharField(blank=True, max_length=200, null=True)),
                ('scenario_type', models.CharField(choices=[('baseline', 'Baseline'), ('optimistic', 'Optimistic'), ('pessimistic', 'Pessimistic'), ('custom', 'Custom')], default='baseline', max_length=50)),
                ('factors', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to='budgeting.budget')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'Budget Forecast',
                'verbose_name_plural': 'Budget Forecasts',
                'db_table': 'budget_forecasts',
                'ordering': ['-forecast_date'],
            },
        ),
        migrations.CreateModel(
            name='BudgetGoal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('goal_name', models.CharField(max_length=200)),
                ('goal_type', models.CharField(choices=[('leads', 'Lead Generation'), ('conversions', 'Conversions'), ('revenue', 'Revenue'), ('awareness', 'Brand Awareness'), ('engagement', 'Engagement'), ('custom', 'Custom')], max_length=50)),
                ('target_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('current_value', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('unit', models.CharField(default='units', max_length=50)),
                ('roi_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('cpa', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pecunia_feasibility_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('pecunia_recommendations', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='budgeting.budget')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'Budget Goal',
                'verbose_name_plural': 'Budget Goals',
                'db_table': 'budget_goals',
            },
        ),
        migrations.CreateModel(
            name='PecuniaRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('recommendation_type', models.CharField(choices=[('optimization', 'Budget Optimization'), ('risk_alert', 'Risk Alert'), ('opportunity', 'Opportunity'), ('efficiency', 'Efficiency Improvement'), ('savings', 'Cost Savings')], max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('estimated_impact', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('impact_type', models.CharField(blank=True, choices=[('savings', 'Savings'), ('revenue', 'Revenue'), ('efficiency', 'Efficiency')], max_length=20, null=True)),
                ('is_implemented', models.BooleanField(default=False)),
                ('implemented_at', models.DateTimeField(blank=True, null=True)),
                ('implementation_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_budget', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='budgeting.budget')),
                ('related_expenses', models.ManyToManyField(blank=True, to='budgeting.expense')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'Pecunia Recommendation',
                'verbose_name_plural': 'Pecunia Recommendations',
                'db_table': 'pecunia_recommendations',
                'ordering': ['-created_at'],
            },
        ),
    ]
