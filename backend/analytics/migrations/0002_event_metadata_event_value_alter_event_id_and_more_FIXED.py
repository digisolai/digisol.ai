# Fixed version - Generated by Django 5.2.4 on 2025-07-22 21:31

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


def convert_to_uuid_safely(apps, schema_editor):
    """
    Safely convert BigInt IDs to UUIDs by creating new records
    """
    Event = apps.get_model('analytics', 'Event')
    db_alias = schema_editor.connection.alias
    
    # Get all existing events
    events = list(Event.objects.using(db_alias).all().values())
    
    # Clear the table
    Event.objects.using(db_alias).all().delete()
    
    # Recreate with UUID IDs
    for event_data in events:
        # Remove the old ID and let UUID auto-generate
        event_data.pop('id', None)
        Event.objects.using(db_alias).create(**event_data)


def reverse_uuid_conversion(apps, schema_editor):
    """
    Reverse operation - not implemented as it's destructive
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('analytics', '0001_initial'),
        ('core', '0004_tenant_text_credits_tenant_text_credits_used'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # First add the new fields
        migrations.AddField(
            model_name='event',
            name='metadata',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='event',
            name='value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        
        # Data migration to safely convert IDs
        migrations.RunPython(convert_to_uuid_safely, reverse_uuid_conversion),
        
        # Then alter the ID field AFTER data conversion
        migrations.AlterField(
            model_name='event',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        
        # Create the new model
        migrations.CreateModel(
            name='ReportConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('configuration_json', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'Report Configuration',
                'verbose_name_plural': 'Report Configurations',
                'db_table': 'report_configurations',
                'ordering': ['-created_at'],
                'unique_together': {('name', 'tenant')},
            },
        ),
    ]