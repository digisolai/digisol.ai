# Generated by Django 5.2.4 on 2025-08-03 23:38

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('analytics', '0003_leadfunnelevent'),
        ('core', '0018_enhance_brand_profile_comprehensive_branding'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsInsight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('insight_type', models.CharField(choices=[('anomaly', 'Anomaly Detection'), ('trend', 'Trend Analysis'), ('correlation', 'Correlation Analysis'), ('prediction', 'Prediction'), ('recommendation', 'Recommendation'), ('segmentation', 'Segmentation'), ('root_cause', 'Root Cause Analysis')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('data_sources', models.JSONField(default=list)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('impact_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('recommendations', models.JSONField(default=list)),
                ('visualizations', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_actioned', models.BooleanField(default=False)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'Analytics Insight',
                'verbose_name_plural': 'Analytics Insights',
                'db_table': 'analytics_insights',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('model_type', models.CharField(choices=[('regression', 'Regression'), ('classification', 'Classification'), ('clustering', 'Clustering'), ('time_series', 'Time Series'), ('churn_prediction', 'Churn Prediction'), ('attribution', 'Attribution Modeling'), ('marketing_mix', 'Marketing Mix Modeling')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('model_config', models.JSONField(default=dict)),
                ('model_file_path', models.CharField(blank=True, max_length=500)),
                ('training_data_config', models.JSONField(default=dict)),
                ('performance_metrics', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_trained', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'Analytics Model',
                'verbose_name_plural': 'Analytics Models',
                'db_table': 'analytics_models',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('source_type', models.CharField(choices=[('google_analytics', 'Google Analytics'), ('google_search_console', 'Google Search Console'), ('facebook_ads', 'Facebook Ads'), ('linkedin_ads', 'LinkedIn Ads'), ('twitter_ads', 'Twitter Ads'), ('crm', 'CRM System'), ('email_platform', 'Email Platform'), ('social_media', 'Social Media'), ('website', 'Website Analytics'), ('custom_api', 'Custom API')], max_length=50)),
                ('connection_config', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_frequency', models.CharField(default='daily', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'Data Source',
                'verbose_name_plural': 'Data Sources',
                'db_table': 'data_sources',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DataSyncLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sync_started', models.DateTimeField(auto_now_add=True)),
                ('sync_completed', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='running', max_length=20)),
                ('records_processed', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('sync_config', models.JSONField(default=dict)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.datasource')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'Data Sync Log',
                'verbose_name_plural': 'Data Sync Logs',
                'db_table': 'data_sync_logs',
                'ordering': ['-sync_started'],
            },
        ),
        migrations.CreateModel(
            name='IndustryAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_date', models.DateTimeField(auto_now_add=True)),
                ('industry', models.CharField(max_length=255)),
                ('sub_industry', models.CharField(blank=True, max_length=255)),
                ('market_size', models.JSONField(default=dict)),
                ('growth_rates', models.JSONField(default=dict)),
                ('market_segments', models.JSONField(default=list)),
                ('competitors', models.JSONField(default=list)),
                ('competitive_landscape', models.JSONField(default=dict)),
                ('trends', models.JSONField(default=list)),
                ('consumer_behavior', models.JSONField(default=dict)),
                ('regulations', models.JSONField(default=list)),
                ('strategic_implications', models.JSONField(default=list)),
                ('data_sources', models.JSONField(default=list)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'Industry Analysis',
                'verbose_name_plural': 'Industry Analyses',
                'db_table': 'industry_analyses',
                'ordering': ['-analysis_date'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('template_type', models.CharField(choices=[('marketing_performance', 'Marketing Performance'), ('campaign_roi', 'Campaign ROI Summary'), ('website_traffic', 'Website Traffic Overview'), ('social_media_engagement', 'Social Media Engagement'), ('email_performance', 'Email Performance'), ('lead_generation', 'Lead Generation'), ('conversion_funnel', 'Conversion Funnel'), ('revenue_analytics', 'Revenue Analytics'), ('custom', 'Custom Report')], max_length=50)),
                ('configuration', models.JSONField(default=dict)),
                ('is_global', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'db_table': 'report_templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SavedReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('configuration', models.JSONField(default=dict)),
                ('schedule_config', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_generated', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='analytics.reporttemplate')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'Saved Report',
                'verbose_name_plural': 'Saved Reports',
                'db_table': 'saved_reports',
                'ordering': ['-updated_at'],
                'unique_together': {('name', 'tenant')},
            },
        ),
        migrations.CreateModel(
            name='ReportExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('execution_config', models.JSONField(default=dict)),
                ('results', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('executed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.savedreport')),
            ],
            options={
                'verbose_name': 'Report Execution',
                'verbose_name_plural': 'Report Executions',
                'db_table': 'report_executions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='SEOAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_date', models.DateTimeField(auto_now_add=True)),
                ('domain', models.CharField(max_length=255)),
                ('gsc_data', models.JSONField(default=dict)),
                ('ga_data', models.JSONField(default=dict)),
                ('technical_seo', models.JSONField(default=dict)),
                ('keyword_data', models.JSONField(default=dict)),
                ('competitor_data', models.JSONField(default=dict)),
                ('insights', models.JSONField(default=list)),
                ('recommendations', models.JSONField(default=list)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'SEO Analysis',
                'verbose_name_plural': 'SEO Analyses',
                'db_table': 'seo_analyses',
                'ordering': ['-analysis_date'],
            },
        ),
        migrations.CreateModel(
            name='SWOTAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_date', models.DateTimeField(auto_now_add=True)),
                ('analysis_period', models.CharField(max_length=100)),
                ('strengths', models.JSONField(default=list)),
                ('weaknesses', models.JSONField(default=list)),
                ('opportunities', models.JSONField(default=list)),
                ('threats', models.JSONField(default=list)),
                ('data_sources', models.JSONField(default=list)),
                ('strategic_recommendations', models.JSONField(default=list)),
                ('market_context', models.JSONField(default=dict)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'verbose_name': 'SWOT Analysis',
                'verbose_name_plural': 'SWOT Analyses',
                'db_table': 'swot_analyses',
                'ordering': ['-analysis_date'],
            },
        ),
    ]
